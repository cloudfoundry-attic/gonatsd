// Automatically generated by MockGen. DO NOT EDIT!
// Source: gonatsd/gonatsd (interfaces: Server)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	gonatsd "gonatsd/gonatsd"
)

// Mock of Server interface
type MockServer struct {
	ctrl     *gomock.Controller
	recorder *_MockServerRecorder
}

// Recorder for MockServer (not exported)
type _MockServerRecorder struct {
	mock *MockServer
}

func NewMockServer(ctrl *gomock.Controller) *MockServer {
	mock := &MockServer{ctrl: ctrl}
	mock.recorder = &_MockServerRecorder{mock}
	return mock
}

func (_m *MockServer) EXPECT() *_MockServerRecorder {
	return _m.recorder
}

func (_m *MockServer) Commands() chan<- gonatsd.ServerCmd {
	ret := _m.ctrl.Call(_m, "Commands")
	ret0, _ := ret[0].(chan<- gonatsd.ServerCmd)
	return ret0
}

func (_mr *_MockServerRecorder) Commands() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Commands")
}

func (_m *MockServer) Config() *gonatsd.Config {
	ret := _m.ctrl.Call(_m, "Config")
	ret0, _ := ret[0].(*gonatsd.Config)
	return ret0
}

func (_mr *_MockServerRecorder) Config() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Config")
}

func (_m *MockServer) DeliverMessage(_param0 *gonatsd.Subscription, _param1 *gonatsd.Message) {
	_m.ctrl.Call(_m, "DeliverMessage", _param0, _param1)
}

func (_mr *_MockServerRecorder) DeliverMessage(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeliverMessage", arg0, arg1)
}

func (_m *MockServer) Info() *[]byte {
	ret := _m.ctrl.Call(_m, "Info")
	ret0, _ := ret[0].(*[]byte)
	return ret0
}

func (_mr *_MockServerRecorder) Info() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Info")
}

func (_m *MockServer) Start() {
	_m.ctrl.Call(_m, "Start")
}

func (_mr *_MockServerRecorder) Start() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Start")
}

func (_m *MockServer) Stats() *gonatsd.Stats {
	ret := _m.ctrl.Call(_m, "Stats")
	ret0, _ := ret[0].(*gonatsd.Stats)
	return ret0
}

func (_mr *_MockServerRecorder) Stats() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stats")
}

func (_m *MockServer) Subscriptions() *gonatsd.Trie {
	ret := _m.ctrl.Call(_m, "Subscriptions")
	ret0, _ := ret[0].(*gonatsd.Trie)
	return ret0
}

func (_mr *_MockServerRecorder) Subscriptions() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Subscriptions")
}
